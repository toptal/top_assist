# Example of .env file.

# Environment configuration
ENV=development

TOP_ASSIST_API_HOST=0.0.0.0
TOP_ASSIST_API_PORT=8080
TOP_ASSIST_METRICS_PORT=9090
TOP_ASSIST_METRICS_PORT_AUTOINCREMENT=1

TOP_ASSIST_LOGS_TEXT_COLOR=true

CONFLUENCE_BASE_URL=https://top-assist.atlassian.net/
CONFLUENCE_CLOUD_ID="???"

# Ignore import for pages with these labels
CONFLUENCE_IGNORE_LABELS=top-assist-ignore,archived

# Confluence page with stats data about Top Assist available spaces and pages
CONFLUENCE_STATS_PAGE_TITLE="Top Assist - Spaces (development)"
CONFLUENCE_STATS_PAGE_ID="???"

# Top Assist Confluence user
CONFLUENCE_USER="user@example.com"
CONFLUENCE_API_TOKEN="???"

# Confluence OAuth Credentials
CONFLUENCE_OAUTH_CLIENT_ID=
CONFLUENCE_OAUTH_CLIENT_SECRET=
CONFLUENCE_OAUTH_AUTHORIZATION_URL_TEMPLATE=https://auth.atlassian.com/authorize?audience=api.atlassian.com&client_id={client_id}&scope=search%3Aconfluence%20offline_access%20read%3Ame&redirect_uri={callback_url}&state={state}&response_type=code&prompt=consent
CONFLUENCE_OAUTH_REDIRECT_URI=http://localhost:8080/confluence/oauth/callback

# Initial URL to start the OAuth flow with Top assist on Confluence, useful if you have frontpage/proxy and need to access Top Assist before the Conflunce OAuth page
CONFLUENCE_OAUTH_TOP_ASSIST_REDIRECT_URL_TEMPLATE=http://localhost:8080/confluence/oauth/redirect/{state}

OPENAI_API_KEY="sk-???"
OPENAI_FAKE_API_KEY="sk-proj-R4nd0m5tRin6R4nd0m5tRin6R4nd0m5tRin6R4nd0m5tRin6"

# OpenAI assistants IDs
OPENAI_ASSISTANT_ID_QA=asst_put_assistant_id_associated_with_openai_api_key_here
OPENAI_ASSISTANT_ID_BASE=asst_put_assistant_id_associated_with_openai_api_key_here

SLACK_APP_TOKEN="xapp-slackappverysecrettoken"
SLACK_BOT_TOKEN="xoxb-slackbotverysecrettoken"

# Only handle events coming from specific Slack enterprise (organization) and/or team (workspace)
# Both values are optional and applied independently.
# "*" means that any value would be accepted.
SLACK_ALLOW_ENTERPRISE_ID=*
SLACK_ALLOW_TEAM_ID=*
SLACK_REPLY_QUESTIONS_IN_CHANNELS=true

# DB configuration
DB_USER=postgres
DB_PASSWORD=postgres
DB_HOST=localhost
DB_PORT=5432
DB_NAME=top_assist

VECTOR_COLLECTIONS_PREFIX=TopAssist
# Normalized Distance between the result item and the search vector (threshold)
# Normalized to be between 1.0 (identical vectors) and 0.0 (perfect opposite).
PAGES_CERTAINTY_THRESHOLD=0.0

# Uncomment to switch to qdrant
# QDRANT_URL="http://localhost:6333"

WEAVIATE_API_KEY=
WEAVIATE_HTTP_HOST=localhost
WEAVIATE_HTTP_PORT=8000
WEAVIATE_GRPC_HOST=localhost
WEAVIATE_GRPC_PORT=50051
WEAVIATE_SECURE=false

# Datadog config
# See https://docs.datadoghq.com/tracing/trace_collection/library_config/python/ for more options
DD_ENV=development
DD_SERVICE=top-assist
# DD_VERSION=

DD_SERVICE_MAPPING=postgres:top-assist-postgres,requests:top-assist-request,grpc-client:top-assist-grpc-client,fastapi:top-assist-web
DD_OPENAI_SERVICE=top-assist-open-ai

DD_TRACE_ENABLED=false
DD_LOGS_INJECTION=false
DD_AGENT_HOST=localhost
DD_AGENT_PORT=8126

# Sentry
SENTRY_DSN=

# Prometheus
PROMETHEUS_MULTIPROC_DIR=tmp/prometheus_multiproc

# Key for encrypting users personal Confluence tokens.
# generate ones with:
# poetry run python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode('utf-8'))"
CRYPTOGRAPHY_SECRET_KEY="S0mERandomKeyS0mERandomKeyS0mERandomKeySome="

# API Docs (This is disabled on staging/production)
TOP_ASSIST_API_DOCS_URL="/docs"
TOP_ASSIST_API_REDOCS_URL="/redocs"

# ADMIN
TOP_ASSIST_ADMIN_USER=admin
TOP_ASSIST_ADMIN_PASSWORD=admin
TOP_ASSIST_ADMIN_SESSION_SECRET_KEY=fake-session-secret
TOP_ASSIST_ADMIN_EXTRA_LINKS='[{ "name": "FastAPI Docs", "url": "/docs"}, { "name": "FastAPI ReDocs", "url": "/redocs"}]'

# DIFY
DIFY_API_ENDPOINT='https://dify.top-assist.net/v1/workflows/run'
DIFY_PROMPT_OPTIMIZER_API_KEY="app-w...."

# =========== Dev-only =========== #
MYPY_CACHE_DIR=".mypy_cache"

# Langchain & LangSmith
# To be able to track all the requests made by the Langchain API, you can set LangSmith as a proxy for local development.
# Visit https://smith.langchain.com/ to get your API key (Settings -> API Keys).
LANGCHAIN_API_KEY='lsv2_pt_.....'
LANGCHAIN_PROJECT="TopAssist development"
LANGCHAIN_TRACING_V2=false
